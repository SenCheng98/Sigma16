# makefile for Sigma16

# Extract the version from the package.json file; it's on the line
# consisting of "version: : "1.2.3",

VERSION:=$(shell cat package.json | grep version | head -1 | awk -F= "{ print $2 }" | sed 's/[version:,\",]//g' | tr -d '[[:space:]]')

#  make all               build everything from source
#  make userguide               generate html from user guide markdown source
#  make dependencies      use npm to download Javascript dependencies
#  make clean             temp and backup files
#  make very-clean        also delete generated doc/html files
#  make archive-tarball   save a .tgz tarball in archive directory

# See README.txt for file and directory layout.  The ArchiveLocation
# is relative to Sigma16/src

ArchiveLocation := ../../../archive

#---------------------------------------------------------------------
# Calculate locations and times, don't need to edit these

# Generate filename for archive
PackagePath := $(shell pwd)
PackageName := Sigma16
DateTimeStamp := $(shell date +%Y-%m-%d-at-%H-%M)
BuildDate != date +%d\ %b\ %Y
TarballName := $(PackageName)-on-$(DateTimeStamp).tgz
FullCopyName := $(PackageName)-on-$(DateTimeStamp)


# It's necessary to make userguide, but the rest is optional: you can just
# launch in browser over internet.  See index in top level directory.

.PHONY : all
all :
	make version-file
	make userguide
	make dependencies
	make executable
	make release

# make show-parameters -- print calculated parameters
.PHONY : show-parameters
show-parameters :
	echo VERSION = $(VERSION)
	echo PackagePath = $(PackagePath)
	echo PackageName = $(PackageName)
	echo DateTimeStamp = $(DateTimeStamp)
	echo BuildDate = $(BuildDate)
	echo TarballName = $(TarballName)
	echo FullCopyName = $(FullCopyName)
	echo ArchiveLocation = $(ArchiveLocation)
	echo Sigma16Version = $(Sigma16Version)

#---------------------------------------------------------------------
# Generate documentation

# make userguide -- generate the html documentation from markdown source

.PHONY : userguide
userguide :
	mkdir -p doc/html
	cp -r doc/src/figures doc/html
	cp doc/src/doc.css doc/html
	pandoc --standalone \
          --template=doc/src/userguide-template.html \
          --table-of-contents --toc-depth=3 \
          --variable=version:'$(VERSION)' \
          --variable=date:'$(VersionDate)' \
          --variable=css:doc.css \
          -o doc/html/userguide-index.html \
	  doc/src/userguide-index.md

.PHONY : release-index
release-index :
	mkdir -p ../release
	pandoc --standalone \
          --template=doc/src/release-index-template.html \
          --variable=version:'$(VERSION)' \
          --variable=date:'this is version date $(VersionDate)' \
          --variable=css:'./app/doc/src/doc.css' \
          -o ../release/index.html \
	  doc/src/release-index.md

# make npm -- download Javascript dependencies
.PHONY : dependencies
dependencies :
	npm install

.PHONY : version-file
version-file :
	echo $(VERSION) > ../VERSION
	echo "const s16version = \"$(VERSION)\";" > version.js

.PHONY : run
run :
	npm start

.PHONY : executable
executable :
	npm run mkdist

.PHONY : release
release :
	mkdir -p ../release/Sigma16-$(VERSION)
	cp ../LICENSE.txt ../release/Sigma16-$(VERSION)
	cp ../README.md ../release/Sigma16-$(VERSION)
	cp ../VERSION ../release/Sigma16-$(VERSION)
	mkdir -p ../release/Sigma16-$(VERSION)/app
	cp makefile ../release/Sigma16-$(VERSION)/app
	cp *.html ../release/Sigma16-$(VERSION)/app
	cp *.css ../release/Sigma16-$(VERSION)/app
	cp *.js ../release/Sigma16-$(VERSION)/app
	cp *.json ../release/Sigma16-$(VERSION)/app
	cp -r datafiles ../release/Sigma16-$(VERSION)/app
	cp -r doc ../release/Sigma16-$(VERSION)/app
	cp -r programs ../release/Sigma16-$(VERSION)/app
	zip -r ../release/Sigma16-$(VERSION).zip ../release/Sigma16-$(VERSION)
	make release-index
	mv dist/*.exe ../release/Sigma16-Sigma16-$(VERSION)-win.exe

# There is a bug in Electron-builder: it gives a bad name to the exe
# file; for example it produces 'sigma16 3.0.1-7.2.exe' including the
# quote characters, and if a better name is specified using
# artifactName it fails to expand the variables.  So in building the
# release, the executable files are renamed as they are moved.

#---------------------------------------------------------------------
# Maintaining the directories

# make clean -- remove backup and object files, and temporary
# compilation files.  Leaves executable, documentation, and source in
# place.

.PHONY : clean
clean :
	find . \( -name '*~'  \
	  -o -name '*.bak' \) -delete

# make very-clean -- remove html documentation files generated by
# panddoc, leaving a minimal source directory

.PHONY : very-clean
very-clean :
	make clean
	rm -rf datafiles/doc

# make archive-tarball -- create a tgz file of the entire
# Sigma16-i.j.k directory and place it in the archive directory.  See
# README.txt for directory layout.
.PHONY : archive-tarball
archive-tarball :
	cd ../.. ; \
	  pwd ; \
	  tar -czf $(TarballName) $(PackageName) ; \
	  mv $(TarballName) $(ArchiveLocation)

# make archive-copy -- create a full copy of the entire Sigma16-i.j.k
# directory and place it in the archive directory.
.PHONY : archive-copy
archive-copy :
	cd ../..; \
	  pwd ; \
	  cp -rp $(PackagePath) $(ArchiveLocation)/$(FullCopyName)

# make list-archive -- list contents of the archive directory
.PHONY : list-archive
list-archive :
	ls -lctr $(ArchiveLocation)
