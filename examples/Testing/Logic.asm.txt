; Logic - test instructions for bit fields, shifting, and logic
; John O'Donnell. This file is part of Sigma16, https://jtod.github.io/home/Sigma16/

; Test data

      lea     R1,$00ff[R0] ; R1 := 00ff
      lea     R2,$0f0f[R0] ; R1 := 0f0f

; logicw

      logicw  R3,R1,R2,1   ; R1 and R2 = 000f
      logicw  R4,R1,R2,6   ; R1 xor R2 = 0ff0

      logicw  R5,R1,R2,or  ; 0fff
      logicw  R6,R1,R2,nor ; f000
      logicw  R6,R1,R2,xor ; 0ff0
      logicw  R7,R1,R2,and ; 000f

; The function field is an expression, not just a constant, and the
; expression can include a forward reference to an equ.

or    equ     7
nor   equ     8
xor   equ     6
and   equ     1

; Pseudoinstructions for logicw

      inv     R3,R1        ; ff00
      and     R4,R1,R2     ; 000f
      or      R5,R1,R2     ; 0fff
      xor     R6,R1,R2     ; 0ff0

; logicb

      add     R1,R0,R0     ; 0000
      logicb  R1,3,9,2,15  ; 1000 R1.3 := 1
      logicb  R1,3,9,2,0   ; 0000 R1.3 := 0
      logicb  R1,3,9,2,15  ; 1000 R1.3 := 1
      logicb  R1,6,0,0,15  ; 1200 R1.6 := 1

      orb     R1,12,3,2    ; 1208 R1.12 := 1
      invb    R1,15,0      ; 1209 R1.15 := 1
      andb    R1,15,0,15   ; 1208 R1.15 := 0
      xorb    R1,14,12,0
      trap    R0,R0,R0     ; terminate
