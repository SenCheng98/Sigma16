; TestCoreCondCode: test instructions that set the condition code
; This file is part of Sigma16. See README, https://jtod.github.io/home/Sigma16/

; Condition code flags are defined in architecture.mjs.  Each flag has
; a symbolic name used in the implementation, and a display name used
; in the "instruction decode" panel on the emulator GUI.  The usual
; relations < = > are used for integers (binary representation) ,
; while L = G are used for natural numbers (two's complement
; representation).  The code display characters are sSCVv<L=G>

; index  val  code  display   type and relation
;----------------------------------------------
; bit 0  0001  g      >        int >
; bit 1  0002  G      G        nat >
; bit 2  0004  E      =        nat,int =
; bit 3  0008  L      L        nat <
; bit 4  0010  l      <        int <
; bit 5  0020  v      v        int overflow
; bit 6  0040  V      V        int overflow
; bit 7  0080  C      C        bin carry out, carry in (addc)
; bit 8  0100  S      S        bin carry out, carry in (addc)
; bit 9  0200  s      s        bin carry out, carry in (addc)

; Test data
      lea   R1,3[R0]    ; 0003  R1 := 3
      lea   R2,5[R0]    ; 0005  R2 := 5
      lea   R3,-3[R0]   ; fffd  R3 := -3
      lea   R4,-7[R0]   ; fff9  R4 := -7

; Compare two positives
      cmp    R1,R2      ; R15 = 0018 <L
      cmp    R2,R1      ; R15 = 0003 >G
      cmp    R2,R3      ; R15 = 0009 >L actually 000a LG ???????????
      cmp    R3,R2      ; R15 = 0012 <G actually 0011 <>

; Compare positive and negative
      cmp    R2,R3      ; R15 = 0009 L> actually 000a LG
      cmp    R3,R2      ; R15 = 0012 <G actually 0012 <>

; Compare two negatives
      cmp    R3,R4      ; R15 = 0003 G>
      cmp    R4,R3      ; R15 = 0018 <L

; Addition
      add    R5,R1,R2   ; R15 = 0001 >   8 is positive
      add    R5,R2,R4   ; R15 = 0010 <   -2 is negative
      add    R5,R1,R3   ; R15 = 0002 -   0 is zero

; More test data

      lea     R1,-30000[R0]    ; R1 = I: -30000   N: 8ad0
      lea     R2,-2[R0]        ; R2 = I:     -2   N: fffe
      lea     R3,13[R0]        ; R3 = I:     13   N: 000d
      lea     R4,28749[R0]     ; R4 = I:  28749   N: 704d

      cmp     R0,R0     ; R15 = 0004  =
      cmp     R0,R1     ; R15 = 0009  > L
      cmp     R0,R2     ; R15 = 0009  > L
      cmp     R0,R3     ; R15 = 0018  < L
      cmp     R0,R4     ; R15 = 0018  < L

      cmp     R1,R0     ; R15 = 0012  < G
      cmp     R1,R1     ; R15 = 0004  =
      cmp     R1,R2     ; R15 = 0018  < L
      cmp     R1,R3     ; R15 = 0012  < G
      cmp     R1,R4     ; R15 = 0012  < G
      cmp     R2,R0     ; R15 = 0012  < G
      cmp     R2,R1     ; R15 = 0003  > G
      cmp     R2,R2     ; R15 = 0004  =
      cmp     R2,R3     ; R15 = 0012  < G
      cmp     R2,R4     ; R15 = 0012  < G

      cmp     R3,R0     ; R15 = 0003  > G
      cmp     R3,R1     ; R15 = 0009  > L
      cmp     R3,R2     ; R15 = 0009  > L
      cmp     R3,R3     ; R15 = 0004  =
      cmp     R3,R4     ; R15 = 0018  < L

      cmp     R4,R0     ; R15 = 0003  > G
      cmp     R4,R1     ; R15 = 0009  > L
      cmp     R4,R2     ; R15 = 0009  > L
      cmp     R4,R3     ; R15 = 0003  > G
      cmp     R4,R4     ; R15 = 0004  =

      trap    R0,R0,R0
